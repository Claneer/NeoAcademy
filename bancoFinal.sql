-- MySQL Script generated by MySQL Workbench
-- Sun May 26 06:43:53 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema neoacademy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema neoacademy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `neoacademy` DEFAULT CHARACTER SET utf8 ;
USE `neoacademy` ;

-- -----------------------------------------------------
-- Table `neoacademy`.`Aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Aluno` (
  `idAluno` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) UNIQUE NOT NULL,
  `cpf` VARCHAR(11) UNIQUE NOT NULL,
  `telefone` VARCHAR(11) NOT NULL,
  `data_nasc` DATE NOT NULL,
  `genero` CHAR(1) NULL,
  `cep` VARCHAR(8) NOT NULL,
  `logradouro` VARCHAR(100) NOT NULL,
  `bairro` VARCHAR(50) NOT NULL,
  `cidade` VARCHAR(50) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  `numero` INT NOT NULL,
  `usuario` VARCHAR(30) UNIQUE NOT NULL,
  `senha` VARCHAR(50) NOT NULL,
  `status` INT DEFAULT 1 NOT NULL,
  `foto` MEDIUMBLOB NULL,
  PRIMARY KEY (`idAluno`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Administrador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Administrador` (
  `idAdmin` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) UNIQUE NOT NULL,
  `cpf` VARCHAR(11) UNIQUE NOT NULL,
  `telefone` VARCHAR(11) NOT NULL,
  `data_nasc` DATE NOT NULL,
  `genero` CHAR(1) NULL,
  `cep` VARCHAR(8) NOT NULL,
  `logradouro` VARCHAR(100) NOT NULL,
  `bairro` VARCHAR(50) NOT NULL,
  `cidade` VARCHAR(50) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  `numero` INT NOT NULL,
  `usuario` VARCHAR(30) UNIQUE NOT NULL,
  `senha` VARCHAR(50) NOT NULL,
  `salario` DOUBLE NOT NULL,
  `status` INT DEFAULT 1 NOT NULL,
  `foto` MEDIUMBLOB NULL,
  PRIMARY KEY (`idAdmin`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Curso` (
  `idCurso` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `descricao` TEXT(500) NOT NULL,
  `cargaHoraria` INT NOT NULL,
  `valor` DOUBLE NOT NULL,
  `idAdmin` INT NOT NULL,
  PRIMARY KEY (`idCurso`),
  INDEX `fk_Curso_Administrador1_idx` (`idAdmin` ASC) ,
  CONSTRAINT `fk_Curso_Administrador1`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `neoacademy`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Professor` (
  `idProfessor` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) UNIQUE NOT NULL,
  `cpf` VARCHAR(11) UNIQUE NOT NULL,
  `telefone` VARCHAR(11) NOT NULL,
  `data_nasc` DATE NOT NULL,
  `genero` CHAR(1) NULL,
  `cep` VARCHAR(8) NOT NULL,
  `logradouro` VARCHAR(100) NOT NULL,
  `bairro` VARCHAR(50) NOT NULL,
  `cidade` VARCHAR(50) NOT NULL,
  `uf` CHAR(2) NOT NULL,
  `numero` INT NOT NULL,
  `usuario` VARCHAR(30) UNIQUE NOT NULL,
  `senha` VARCHAR(50) NOT NULL,
  `salario` DOUBLE NOT NULL,
  `status` INT DEFAULT 1 NOT NULL,
  `foto` MEDIUMBLOB NULL,
  `idAdmin` INT NOT NULL,
  PRIMARY KEY (`idProfessor`),
  INDEX `fk_Professor_Administrador1_idx` (`idAdmin` ASC) ,
  CONSTRAINT `fk_Professor_Administrador1`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `neoacademy`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Disciplina` (
  `idDisciplina` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NOT NULL,
  `cargaHoraria` INT NOT NULL,
  `idCurso` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  `idAdmin` INT NOT NULL,
  PRIMARY KEY (`idDisciplina`),
  INDEX `fk_Disciplina_Curso1_idx` (`idCurso` ASC) ,
  INDEX `fk_Disciplina_Professor1_idx` (`idProfessor` ASC) ,
  INDEX `fk_Disciplina_Administrador1_idx` (`idAdmin` ASC) ,
  CONSTRAINT `fk_Disciplina_Curso1`
    FOREIGN KEY (`idCurso`)
    REFERENCES `neoacademy`.`Curso` (`idCurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Disciplina_Professor1`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `neoacademy`.`Professor` (`idProfessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Disciplina_Administrador1`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `neoacademy`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Cartao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Cartao` (
  `idCartao` INT NOT NULL AUTO_INCREMENT,
  `numero` VARCHAR(20) NOT NULL,
  `vencimento` DATE NOT NULL,
  `titular` VARCHAR(100) NOT NULL,
  `cvv` INT NOT NULL,
  `status` INT DEFAULT 1 NOT NULL,
  `idAluno` INT NOT NULL,
  PRIMARY KEY (`idCartao`),
  INDEX `fk_Cartao_Aluno1_idx` (`idAluno` ASC) ,
  CONSTRAINT `fk_Cartao_Aluno1`
    FOREIGN KEY (`idAluno`)
    REFERENCES `neoacademy`.`Aluno` (`idAluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Transacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Transacao` (
  `idTransacao` INT NOT NULL AUTO_INCREMENT,
  `data` DATE NOT NULL,
  `valor` DOUBLE NOT NULL,
  `numero` VARCHAR(20) NOT NULL,
  `idAluno` INT NOT NULL,
  `idCurso` INT NOT NULL,
  PRIMARY KEY (`idTransacao`),
  INDEX `fk_Transacao_Aluno1_idx` (`idAluno` ASC) ,
  INDEX `fk_Transacao_Curso1_idx` (`idCurso` ASC) ,
  CONSTRAINT `fk_Transacao_Aluno1`
    FOREIGN KEY (`idAluno`)
    REFERENCES `neoacademy`.`Aluno` (`idAluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transacao_Curso1`
    FOREIGN KEY (`idCurso`)
    REFERENCES `neoacademy`.`Curso` (`idCurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Turma` (
  `idTurma` INT NOT NULL AUTO_INCREMENT,
  `nome` CHAR(2) NOT NULL,
  `vagas` INT NOT NULL,
  `idCurso` INT NOT NULL,
  `idAdmin` INT NOT NULL,
  PRIMARY KEY (`idTurma`),
  INDEX `fk_Turma_Curso1_idx` (`idCurso` ASC) ,
  INDEX `fk_Turma_Administrador1_idx` (`idAdmin` ASC) ,
  CONSTRAINT `fk_Turma_Curso1`
    FOREIGN KEY (`idCurso`)
    REFERENCES `neoacademy`.`Curso` (`idCurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Turma_Administrador1`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `neoacademy`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`NotasDisc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`NotasDisc` (
  `idNotas` INT NOT NULL AUTO_INCREMENT,
  `nota` DOUBLE NULL,
  `idAluno` INT NOT NULL,
  `idDisciplina` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  INDEX `fk_Aluno_has_Disciplina_Disciplina1_idx` (`idDisciplina` ASC) ,
  INDEX `fk_Aluno_has_Disciplina_Aluno1_idx` (`idAluno` ASC) ,
  PRIMARY KEY (`idNotas`),
  INDEX `fk_Notas_Professor1_idx` (`idProfessor` ASC) ,
  CONSTRAINT `fk_Aluno_has_Disciplina_Aluno1`
    FOREIGN KEY (`idAluno`)
    REFERENCES `neoacademy`.`Aluno` (`idAluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aluno_has_Disciplina_Disciplina1`
    FOREIGN KEY (`idDisciplina`)
    REFERENCES `neoacademy`.`Disciplina` (`idDisciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notas_Professor1`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `neoacademy`.`Professor` (`idProfessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Avaliacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Avaliacao` (
  `idAvaliacao` INT NOT NULL AUTO_INCREMENT,
  `questao` VARCHAR(200) NOT NULL,
  `alterA` VARCHAR(100) NULL,
  `alterB` VARCHAR(100) NULL,
  `alterC` VARCHAR(100) NULL,
  `alterD` VARCHAR(100) NULL,
  `alterE` VARCHAR(100) NULL,
  `alterCerta` CHAR(1) NOT NULL,
  `valor` DOUBLE NOT NULL,
  `idProfessor` INT NOT NULL,
  `idDisciplina` INT NOT NULL,
  PRIMARY KEY (`idAvaliacao`),
  INDEX `fk_Avaliacao_Professor1_idx` (`idProfessor` ASC) ,
  INDEX `fk_Avaliacao_Disciplina1_idx` (`idDisciplina` ASC) ,
  CONSTRAINT `fk_Avaliacao_Professor1`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `neoacademy`.`Professor` (`idProfessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Avaliacao_Disciplina1`
    FOREIGN KEY (`idDisciplina`)
    REFERENCES `neoacademy`.`Disciplina` (`idDisciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Material`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Material` (
  `idMaterial` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `tipo` ENUM('video', 'pdf', 'texto', 'download') NOT NULL,
  `orientacao` TEXT(250) NULL,
  `url` VARCHAR(255) NOT NULL,
  `idDisciplina` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  PRIMARY KEY (`idMaterial`),
  INDEX `fk_Material_Professor1_idx` (`idProfessor` ASC) ,
  INDEX `fk_Material_Disciplina1_idx` (`idDisciplina` ASC) ,
  CONSTRAINT `fk_Material_Professor1`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `neoacademy`.`Professor` (`idProfessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Material_Disciplina1`
    FOREIGN KEY (`idDisciplina`)
    REFERENCES `neoacademy`.`Disciplina` (`idDisciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`Matricula`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`Matricula` (
  `idTurma` INT NOT NULL,
  `idAluno` INT NOT NULL,
  PRIMARY KEY (`idTurma`, `idAluno`),
  INDEX `fk_Turma_has_Aluno_Aluno1_idx` (`idAluno` ASC) ,
  INDEX `fk_Turma_has_Aluno_Turma1_idx` (`idTurma` ASC) ,
  CONSTRAINT `fk_Turma_has_Aluno_Turma1`
    FOREIGN KEY (`idTurma`)
    REFERENCES `neoacademy`.`Turma` (`idTurma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Turma_has_Aluno_Aluno1`
    FOREIGN KEY (`idAluno`)
    REFERENCES `neoacademy`.`Aluno` (`idAluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `neoacademy`.`NotasCurso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `neoacademy`.`NotasCurso` (
  `idNotas` INT NOT NULL AUTO_INCREMENT,
  `nota` DOUBLE NULL,
  `idAluno` INT NOT NULL,
  `idCurso` INT NOT NULL,
  PRIMARY KEY (`idNotas`),
  INDEX `fk_NotasCurso_Aluno1_idx` (`idAluno` ASC) ,
  INDEX `fk_NotasCurso_Curso1_idx` (`idCurso` ASC) ,
  CONSTRAINT `fk_NotasCurso_Aluno1`
    FOREIGN KEY (`idAluno`)
    REFERENCES `neoacademy`.`Aluno` (`idAluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_NotasCurso_Curso1`
    FOREIGN KEY (`idCurso`)
    REFERENCES `neoacademy`.`Curso` (`idCurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


INSERT INTO administrador (nome, email, cpf, telefone, data_nasc, genero, cep, logradouro, bairro, cidade, uf, usuario, senha, numero, salario)
VALUES 
    ('Administrador', 'adm@example.com', '42739600100', '9999999999', '1990-01-01', 'M', '72302321', 'Quadra QR 110 Conjunto 14A', 'Samambaia Sul (Samambaia)', 'Brasília', 'DF', 'adm', '202cb962ac59075b964b07152d234b70', 55, 100000);
    
INSERT INTO professor (nome, email, cpf, telefone, data_nasc, genero, cep, logradouro, bairro, cidade, uf, usuario, senha, numero, salario, idAdmin)
VALUES 
	('Professor', 'prof@example.com', '23439454118', '88888888888', '1980-08-08', 'F', '70767550', 'Quadra CLN 314 Bloco E', 'Asa Norte', 'Brasília', 'DF', 'prof', '202cb962ac59075b964b07152d234b70', 77, 5000, 1);

INSERT INTO aluno (nome, email, cpf, telefone, data_nasc, genero, cep, logradouro, bairro, cidade, uf, usuario, senha, numero)
VALUES 
    ('Aluno', 'aluno@example.com', '82358259101', '7777777777', '2000-02-02', 'M', '71536080', 'Trecho Trecho 03', 'Setor de Habitações Individuais Norte', 'Brasília', 'DF', 'aluno', '202cb962ac59075b964b07152d234b70', 15);

INSERT INTO `curso` (`nome`, `descricao`, `cargaHoraria`, `valor`, `idAdmin`)
VALUES

('HTML', 'Neste curso completo de HTML, você aprenderá tudo o que precisa para criar páginas web estruturadas e semânticas. Abordaremos desde o básico, como tags e atributos, até tópicos avançados como SEO e acessibilidade, garantindo que suas páginas sejam eficazes e amigáveis para todos os usuários.', 40, 150.00, 1),
('SQL', 'O curso de banco de dados com SQL é projetado para ensinar você a manipular e gerenciar dados de forma eficiente. Desde a criação de tabelas e inserção de dados até consultas complexas, você aprenderá a otimizar bancos de dados e garantir a integridade e segurança das informações armazenadas.', 30, 120.00, 1),
('Java', 'Este curso de Java para iniciantes oferece uma introdução completa à programação orientada a objetos com Java. Você aprenderá sobre classes, objetos, herança, polimorfismo e interfaces, além de desenvolver habilidades para criar aplicações robustas e escaláveis usando esta poderosa linguagem.', 70, 350.00, 1);

INSERT INTO turma (nome, vagas, idCurso, idAdmin)
VALUES ('H1', 1, 1, 1),
	   ('H2', 20, 1, 1),
       
       ('S1', 1, 2, 1),
       ('S2', 20, 2, 1),
       
       ('J1', 1, 3, 1),
       ('J2', 20, 3, 1);
       
INSERT INTO `disciplina` (`nome`, `cargaHoraria`, `idCurso`, `idProfessor`, `idAdmin`)
VALUES

('Fundamentos do HTML', 10, 1, 1, 1),
('Tabelas e Listas', 10, 1, 1, 1),
('Formulários e Inputs', 10, 1, 1, 1),
('HTML Semântico', 10, 1, 1, 1),

('Introdução ao SQL', 10, 2, 1, 1),
('Consultas Básicas', 10, 2, 1, 1),
('Joins e Subconsultas', 5, 2, 1, 1),
('Otimização de Consultas', 5, 2, 1, 1),

('Fundamentos de Java', 20, 3, 1, 1),
('Programação Orientada a Objetos', 20, 3, 1, 1),
('Tratamento de Exceções', 10, 3, 1, 1),
('Desenvolvimento de Aplicações', 10, 3, 1, 1);

INSERT INTO `material` (`nome`, `tipo`, `orientacao`, `url`, `idDisciplina`, `idProfessor`) VALUES

('Introdução ao HTML', 'video', 'Assista ao vídeo para entender os conceitos básicos de HTML.', 'http://example.com/html-introducao', 1, 1),
('Guia Completo de Tags HTML', 'pdf', 'Leia este guia para aprender sobre todas as tags HTML e seus usos.', 'http://example.com/html-tags.pdf', 1, 1),
('Estrutura de um Documento HTML', 'texto', 'Este texto explica a estrutura de um documento HTML e suas principais seções.', 'http://example.com/html-estrutura', 1, 1),
('Exemplos de Código HTML', 'download', 'Baixe exemplos de código HTML para praticar.', 'http://example.com/html-exemplos.zip', 1, 1),
('Criação de Tabelas e Listas', 'video', 'Aprenda como criar tabelas e listas em HTML neste vídeo.', 'http://example.com/html-tabelas-listas', 2, 1),
('Guia de Tabelas e Listas HTML', 'pdf', 'Este documento PDF detalha a criação e estilização de tabelas e listas em HTML.', 'http://example.com/html-tabelas-listas.pdf', 2, 1),
('Elementos de Tabelas e Listas', 'texto', 'Texto explicando os diferentes elementos para criar tabelas e listas em HTML.', 'http://example.com/html-tabelas-listas-elementos', 2, 1),
('Exemplos de Tabelas e Listas HTML', 'download', 'Baixe exemplos de tabelas e listas HTML para prática.', 'http://example.com/html-tabelas-listas-exemplos.zip', 2, 1),
('Criação de Formulários e Inputs', 'video', 'Aprenda como criar formulários e inputs em HTML neste vídeo.', 'http://example.com/html-formularios-inputs', 3, 1),
('Guia de Formulários e Inputs HTML', 'pdf', 'Este documento PDF detalha a criação e estilização de formulários e inputs em HTML.', 'http://example.com/html-formularios-inputs.pdf', 3, 1),
('Elementos de Formulários e Inputs', 'texto', 'Texto explicando os diferentes elementos para criar formulários e inputs em HTML.', 'http://example.com/html-formularios-inputs-elementos', 3, 1),
('Exemplos de Formulários e Inputs HTML', 'download', 'Baixe exemplos de formulários e inputs HTML para prática.', 'http://example.com/html-formularios-inputs-exemplos.zip', 3, 1),
('HTML Semântico', 'video', 'Aprenda sobre HTML semântico e sua importância para a acessibilidade e SEO neste vídeo.', 'http://example.com/html-semantico', 4, 1),
('Guia de HTML Semântico', 'pdf', 'Este documento PDF detalha o uso de tags semânticas em HTML.', 'http://example.com/html-semantico.pdf', 4, 1),
('Tags Semânticas HTML', 'texto', 'Texto explicando o uso de tags semânticas para melhorar a estrutura e acessibilidade das páginas web.', 'http://example.com/html-semantico-tags', 4, 1),
('Exemplos de HTML Semântico', 'download', 'Baixe exemplos de código HTML semântico para prática.', 'http://example.com/html-semantico-exemplos.zip', 4, 1),

('Introdução ao SQL', 'video', 'Assista ao vídeo para aprender os conceitos básicos de SQL.', 'http://example.com/sql-introducao-video', 5, 1),
('Guia de SQL', 'pdf', 'Leia este guia para compreender os fundamentos do SQL.', 'http://example.com/sql-introducao-guia.pdf', 5, 1),
('Conceitos Básicos de SQL', 'texto', 'Este texto explica os conceitos básicos do SQL, incluindo consultas simples e manipulação de dados.', 'http://example.com/sql-introducao-conceitos', 5, 1),
('Exemplos de Consultas SQL', 'download', 'Baixe exemplos de consultas SQL para praticar.', 'http://example.com/sql-introducao-exemplos.zip', 5, 1),
('Consultas Avançadas em SQL', 'video', 'Assista ao vídeo para aprender consultas SQL avançadas.', 'http://example.com/sql-avancado-video', 6, 1),
('Guia de Consultas Avançadas em SQL', 'pdf', 'Este documento PDF detalha consultas SQL avançadas, incluindo junções e subconsultas.', 'http://example.com/sql-avancado-guia.pdf', 6, 1),
('Técnicas Avançadas de Consultas SQL', 'texto', 'Este texto explora técnicas avançadas de consulta SQL, como subconsultas e agregações.', 'http://example.com/sql-avancado-tecnicas', 6, 1),
('Exemplos de Consultas Avançadas em SQL', 'download', 'Baixe exemplos de consultas SQL avançadas para praticar.', 'http://example.com/sql-avancado-exemplos.zip', 6, 1),
('Introdução a Joins e Subconsultas em SQL', 'video', 'Este vídeo fornece uma introdução aos conceitos de joins e subconsultas em SQL, explicando como combiná-los para consultas mais eficientes.', 'https://example.com/introducao-joins-subconsultas-sql-video', 7, 1),
('Guia Completo de Joins e Subconsultas em SQL', 'pdf', 'Este guia detalhado cobre todos os tipos de joins (INNER, LEFT, RIGHT, FULL) e subconsultas em SQL, com exemplos práticos.', 'https://example.com/guia-completo-joins-subconsultas-sql.pdf', 7, 1),
('Dicas Avançadas para Joins e Subconsultas em SQL', 'texto', 'Este texto oferece dicas avançadas e melhores práticas para utilizar joins e subconsultas em SQL, incluindo otimização de performance.', 'https://example.com/dicas-avancadas-joins-subconsultas-sql', 7, 1),
('Exercícios Práticos de Joins e Subconsultas em SQL', 'download', 'Baixe este conjunto de exercícios práticos para aprimorar suas habilidades em joins e subconsultas em SQL, incluindo soluções comentadas.', 'https://example.com/exercicios-joins-subconsultas-sql.zip', 7, 1),
('Otimização de Consultas em SQL', 'video', 'Assista ao vídeo para aprender sobre otimização de consultas em SQL.', 'http://example.com/sql-otimizacao-video', 8, 1),
('Guia de Otimização de Consultas em SQL', 'pdf', 'Este documento PDF aborda estratégias para otimizar consultas SQL e melhorar o desempenho.', 'http://example.com/sql-otimizacao-guia.pdf', 8, 1),
('Melhores Práticas de Otimização em SQL', 'texto', 'Este texto apresenta melhores práticas para otimização de consultas SQL e indexação de tabelas.', 'http://example.com/sql-otimizacao-praticas', 8, 1),
('Exemplos de Otimização de Consultas em SQL', 'download', 'Baixe exemplos de otimização de consultas SQL para praticar.', 'http://example.com/sql-otimizacao-exemplos.zip', 8, 1),

('Introdução aos Fundamentos de Java', 'video', 'Assista ao vídeo para aprender os conceitos básicos de Java.', 'http://example.com/java-fundamentos-video', 9, 1),
('Guia de Java', 'pdf', 'Leia este guia para compreender os fundamentos da linguagem Java.', 'http://example.com/java-fundamentos-guia.pdf', 9, 1),
('Conceitos Básicos de Java', 'texto', 'Este texto explica os conceitos básicos de Java, incluindo variáveis, tipos de dados e estruturas de controle.', 'http://example.com/java-fundamentos-conceitos', 9, 1),
('Exemplos de Código Java', 'download', 'Baixe exemplos de código Java para praticar.', 'http://example.com/java-fundamentos-exemplos.zip', 9, 1),
('Programação Orientada a Objetos em Java', 'video', 'Assista ao vídeo para aprender sobre programação orientada a objetos em Java.', 'http://example.com/java-poo-video', 10, 1),
('Guia de POO em Java', 'pdf', 'Este documento PDF detalha como usar conceitos de POO em Java.', 'http://example.com/java-poo-guia.pdf', 10, 1),
('Criando Classes e Objetos em Java', 'texto', 'Texto explicando como criar e trabalhar com classes e objetos em Java.', 'http://example.com/java-poo-classes-objetos', 10, 1),
('Exemplos de POO em Java', 'download', 'Baixe exemplos de programação orientada a objetos em Java para prática.', 'http://example.com/java-poo-exemplos.zip', 10, 1),
('Tratamento de Exceções em Java', 'video', 'Assista ao vídeo para aprender sobre tratamento de exceções em Java.', 'http://example.com/java-excecoes-video', 11, 1),
('Guia de Tratamento de Exceções em Java', 'pdf', 'Este documento PDF aborda o tratamento de exceções em Java.', 'http://example.com/java-excecoes-guia.pdf', 11, 1),
('Manejando Exceções em Java', 'texto', 'Este texto apresenta como manejar exceções em Java de forma eficaz e robusta.', 'http://example.com/java-excecoes-manejo', 11, 1),
('Exemplos de Tratamento de Exceções em Java', 'download', 'Baixe exemplos de tratamento de exceções em Java para prática.', 'http://example.com/java-excecoes-exemplos.zip', 11, 1),
('Introdução ao Desenvolvimento de Aplicações', 'video', 'Este vídeo fornece uma introdução aos conceitos básicos de desenvolvimento de aplicações, incluindo a escolha de plataformas e ferramentas.', 'https://example.com/introducao-desenvolvimento-aplicacoes-video', 12, 1),
('Guia Completo de Desenvolvimento de Aplicações', 'pdf', 'Este guia completo abrange todos os aspectos do desenvolvimento de aplicações, desde a concepção até a implementação, com exemplos práticos.', 'https://example.com/guia-completo-desenvolvimento-aplicacoes.pdf', 12, 1),
('Tendências e Tecnologias em Desenvolvimento de Aplicações', 'texto', 'Este texto aborda as tendências atuais e as tecnologias emergentes no campo do desenvolvimento de aplicações.', 'https://example.com/tendencias-desenvolvimento-aplicacoes', 12, 1),
('Modelos de Projeto para Aplicações', 'download', 'Baixe este conjunto de modelos de projeto para diversas aplicações, incluindo exemplos práticos e documentação.', 'https://example.com/modelos-projeto-aplicacoes.zip', 12, 1);

INSERT INTO `avaliacao` (`questao`, `alterA`, `alterB`, `alterC`, `alterD`, `alterE`, `alterCerta`, `valor`, `idProfessor`, `idDisciplina`) VALUES
('Qual é a tag correta para criar um link em HTML?', 'a', 'link', 'href', 'url', 'anchor', 'a', 1, 1, 1),
('Qual tag é usada para definir um parágrafo em HTML?', 'div', 'span', 'p', 'paragraph', 'text', 'c', 1, 1, 1),
('Qual atributo é usado para definir um identificador único para um elemento HTML?', 'name', 'class', 'id', 'style', 'identifier', 'c', 1, 1, 1),
('Qual tag é usada para inserir uma imagem em uma página HTML?', 'img', 'picture', 'image', 'src', 'graphic', 'a', 1, 1, 1),
('Qual elemento HTML é usado para criar uma lista ordenada?', 'ul', 'ol', 'li', 'list', 'orderedlist', 'b', 1, 1, 1),
('A tag b é usada para criar um texto em negrito.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 1),
('A tag i é usada para criar um texto itálico.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 1),
('A tag br é usada para criar uma linha horizontal.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'f', 1, 1, 1),
('A tag a pode ser usada para criar um hiperlink.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 1),
('A tag title é usada para definir o título do documento, que aparece na barra de título do navegador.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 1),

('Qual tag é usada para criar uma tabela em HTML?', 'table', 'tab', 'tbl', 't', 'tb', 'a', 1, 1, 2),
('Qual elemento HTML é usado para criar uma lista desordenada?', 'ul', 'ol', 'li', 'list', 'unorderedlist', 'a', 1, 1, 2),
('Qual atributo é usado para definir a largura de uma coluna em uma tabela HTML?', 'width', 'size', 'height', 'col', 'colwidth', 'd', 1, 1, 2),
('Qual elemento HTML é usado para criar um item de uma lista ordenada?', 'ul', 'ol', 'li', 'list', 'orderedlist', 'c', 1, 1, 2),
('Qual elemento HTML é usado para definir uma célula de cabeçalho em uma tabela?', 'table', 'thead', 'th', 'td', 'head', 'c', 1, 1, 2),
('O elemento \"ul\" é usado para criar uma lista ordenada.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 2),
('O atributo rowspan é usado para especificar o número de linhas que uma célula de uma tabela deve ocupar.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 2),
('O elemento \"ol\" é usado para criar uma lista desordenada.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 2),
('O atributo colspan é usado para especificar o número de colunas que uma célula de uma tabela deve ocupar.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 2),
('O elemento \"th\" é usado para definir uma célula de cabeçalho em uma tabela.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 2),

('Qual elemento HTML é usado para criar um formulário?', 'form', 'input', 'submit', 'button', 'fieldset', 'a', 1, 1, 3),
('Qual tipo de input é usado para criar uma caixa de seleção?', 'text', 'checkbox', 'select', 'radio', 'option', 'b', 1, 1, 3),
('Qual tipo de input é usado para criar um botão de envio?', 'text', 'checkbox', 'select', 'radio', 'submit', 'e', 1, 1, 3),
('Qual atributo é usado para especificar o nome de um input em HTML?', 'value', 'type', 'name', 'id', 'placeholder', 'c', 1, 1, 3),
('Qual elemento HTML é usado para agrupar elementos relacionados em um formulário?', 'input', 'fieldset', 'form', 'label', 'div', 'b', 1, 1, 3),
('O atributo required é usado para especificar que um campo de formulário é obrigatório.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 3),
('O elemento \"select\" é usado para criar uma caixa de seleção em um formulário.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 3),
('O elemento \"textarea\" é usado para criar uma caixa de texto de várias linhas em um formulário.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 3),
('O elemento \"button>\"é usado para criar um botão de envio em um formulário.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 3),
('O atributo placeholder é usado para especificar o texto de orientação em um campo de formulário.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 3),

('Qual tag HTML é usada para representar o conteúdo principal de um documento?', 'header', 'main', 'footer', 'nav', 'article', 'b', 1, 1, 4),
('Qual tag HTML é usada para definir uma seção em um documento HTML?', 'div', 'section', 'span', 'article', 'aside', 'b', 1, 1, 4),
('Qual tag HTML é usada para definir a barra de navegação em um documento HTML?', 'header', 'main', 'footer', 'nav', 'section', 'd', 1, 1, 4),
('Qual tag HTML é usada para definir uma unidade independente de conteúdo em um documento HTML?', 'div', 'section', 'span', 'article', 'aside', 'd', 1, 1, 4),
('Qual tag HTML é usada para representar o rodapé de um documento ou de uma seção em um documento HTML?', 'footer', 'main', 'header', 'nav', 'section', 'a', 1, 1, 4),
('A tag \"article\" é usada para definir uma seção autônoma e autocontida em um documento HTML.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 4),
('A tag \"header\" é usada para definir o cabeçalho de uma seção ou de um documento HTML.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 4),
('A tag \"aside\" é usada para definir conteúdo tangencial em um documento HTML, como uma barra lateral.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 4),
('A tag \"nav\" é usada para definir uma área de navegação em um documento HTML.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 4),
('A tag \"div\" é usada para definir uma seção temática em um documento HTML.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 4),

('Qual é o comando SQL usado para selecionar dados de uma tabela?', 'SELECT', 'INSERT', 'UPDATE', 'DELETE', 'CREATE', 'a', 1, 1, 5),
('Qual comando SQL é usado para atualizar dados em uma tabela?', 'SELECT', 'INSERT', 'UPDATE', 'DELETE', 'MODIFY', 'c', 1, 1, 5),
('Qual comando SQL é usado para excluir dados de uma tabela?', 'SELECT', 'INSERT', 'UPDATE', 'DELETE', 'REMOVE', 'd', 1, 1, 5),
('Qual comando SQL é usado para inserir novos dados em uma tabela?', 'SELECT', 'INSERT', 'UPDATE', 'DELETE', 'ADD', 'b', 1, 1, 5),
('Qual comando SQL é usado para criar uma nova tabela?', 'SELECT', 'INSERT', 'CREATE', 'DELETE', 'ALTER', 'c', 1, 1, 5),
('O SQL é uma linguagem de programação usada para criar e gerenciar bancos de dados relacionais.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 5),
('O comando SQL SELECT é usado para inserir dados em uma tabela.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 5),
('O comando SQL DELETE é usado para remover registros de uma tabela.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 5),
('O comando SQL UPDATE é usado para criar uma nova tabela.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 5),
('O comando SQL INSERT é usado para adicionar novos registros a uma tabela.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 5),

('Qual é o comando SQL usado para selecionar todos os dados de uma tabela?', 'SHOW ALL', 'SELECT *', 'GET ALL', 'FETCH ALL', 'RETRIEVE *', 'b', 1, 1, 6),
('Qual cláusula SQL é usada para filtrar resultados em uma consulta SELECT?', 'WHERE', 'FROM', 'HAVING', 'GROUP BY', 'ORDER BY', 'a', 1, 1, 6),
('Qual função SQL é usada para contar o número de registros retornados por uma consulta?', 'COUNT()', 'SUM()', 'MAX()', 'MIN()', 'AVG()', 'a', 1, 1, 6),
('Qual operador SQL é usado para combinar condições em uma cláusula WHERE?', 'OR', 'AND', 'NOT', 'XOR', 'NOR', 'b', 1, 1, 6),
('Qual cláusula SQL é usada para classificar os resultados de uma consulta em ordem crescente ou decrescente?', 'ORDER BY', 'SORT BY', 'GROUP BY', 'FIND BY', 'ARRANGE BY', 'a', 1, 1, 6),
('A cláusula WHERE é usada em uma consulta SELECT para filtrar os resultados com base em uma condição especificada.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 6),
('A função SQL SUM() é usada para contar o número de registros retornados por uma consulta.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 6),
('O operador SQL AND é usado para combinar múltiplas condições na cláusula WHERE, onde todas as condições devem ser verdadeiras para que o registro seja incluído no resultado.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 6),
('A cláusula GROUP BY é usada para classificar os resultados de uma consulta em ordem crescente ou decrescente.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 6),
('A cláusula ORDER BY é usada para agrupar os resultados de uma consulta em categorias.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 6),

('Qual tipo de JOIN retorna todos os registros quando há correspondência em qualquer uma das tabelas?', 'INNER JOIN', 'OUTER JOIN', 'LEFT JOIN', 'RIGHT JOIN', 'FULL JOIN', 'e', 1, 1, 7),
('Qual tipo de JOIN retorna todos os registros da tabela à esquerda e os registros correspondentes da tabela à direita?', 'INNER JOIN', 'OUTER JOIN', 'LEFT JOIN', 'RIGHT JOIN', 'FULL JOIN', 'c', 1, 1, 7),
('Qual cláusula SQL é usada para combinar linhas de duas ou mais tabelas, com base em uma condição relacionada entre elas?', 'GROUP BY', 'HAVING', 'WHERE', 'JOIN', 'ORDER BY', 'd', 1, 1, 7),
('Qual é o resultado de um INNER JOIN se não houver correspondência entre as tabelas?', 'Retorna todos os registros da tabela à esquerda.', 'Retorna todos os registros da tabela à direita.', 'Retorna NULL para as colunas das duas tabelas.', 'Não retorna nenhum registro.', 'Retorna todos os registros quando não há correspondência.', 'd', 1, 1, 7),
('Qual é o operador usado para comparar um valor a uma lista de valores?', 'AND', 'OR', 'LIKE', 'IN', 'NOT', 'd', 1, 1, 7),
('O operador NOT IN é usado para verificar se um valor não está presente em uma subconsulta.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 7),
('O operador INNER JOIN retorna todos os registros quando há correspondência em qualquer uma das tabelas.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 7),
('A subconsulta é uma consulta aninhada dentro de outra consulta SQL.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 7),
('O operador LIKE é usado para comparar um valor a uma lista de valores.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 7),
('O operador OR é usado para combinar condições em uma cláusula WHERE, onde pelo menos uma condição deve ser verdadeira para que o registro seja incluído no resultado.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 7),

('Qual é a função de um índice em um banco de dados relacional?', 'Garantir a integridade referencial dos dados.', 'Otimizar a performance das consultas.', 'Criar uma cópia de segurança dos dados.', 'Gerenciar os acessos dos usuários ao banco de dados.', 'Padronizar a estrutura das tabelas.', 'b', 1, 1, 8),
('Qual é uma técnica comum para otimizar uma consulta SQL?', 'Adicionar mais campos ao SELECT para obter resultados mais detalhados.', 'Utilizar a cláusula GROUP BY em todas as consultas.', 'Usar subconsultas em vez de joins para combinar dados.', 'Evitar o uso de índices em tabelas grandes.', 'Selecionar apenas os campos necessários na cláusula SELECT.', 'e', 1, 1, 8),
('O que significa \"normalização\" em um contexto de banco de dados?', 'Aumentar o tamanho das tabelas para melhorar o desempenho.', 'Reduzir a redundância dos dados para evitar inconsistências.', 'Adicionar mais colunas às tabelas para armazenar mais informações.', 'Desativar índices para simplificar a estrutura do banco de dados.', 'Dividir grandes tabelas em várias tabelas menores.', 'b', 1, 1, 8),
('Qual é uma vantagem do uso de parâmetros em consultas preparadas?', 'Facilita a escrita de consultas SQL complexas.', 'Melhora a legibilidade do código SQL.', 'Evita a necessidade de otimização de consultas.', 'Protege contra injeção de SQL.', 'Reduz o tempo de execução das consultas.', 'd', 1, 1, 8),
('Qual é uma boa prática para otimização de consultas SQL?', 'Evitar o uso de índices em colunas-chave.', 'Não utilizar cláusulas WHERE nas consultas.', 'Selecionar todas as colunas de uma tabela em todas as consultas.', 'Utilizar funções escalares em vez de funções agregadas.', 'Evitar a ordenação de resultados sempre que possível.', 'e', 1, 1, 8),
('A normalização de banco de dados ajuda a reduzir a redundância de dados e a evitar inconsistências.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 8),
('O uso de índices em uma tabela pode acelerar a execução de consultas SQL.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 8),
('As consultas preparadas podem ajudar a proteger contra ataques de injeção de SQL.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 8),
('Selecionar todas as colunas de uma tabela em todas as consultas é uma prática recomendada para otimização de consultas.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 8),
('A ordenação dos resultados de uma consulta SQL sempre é necessária para melhorar a performance.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 8),

('Qual é a função do método main() em Java?', 'Iniciar a execução do programa.', 'Definir o nome da classe.', 'Declarar variáveis globais.', 'Executar a ação principal do programa.', 'Retornar um valor para o método chamador.', 'a', 1, 1, 9),
('Qual é a sintaxe correta para criar um objeto em Java?', 'MyClass = novo MyClass();', 'MyClass = MyClass.new();', 'MyClass = criar novo MyClass();', 'MyClass = novo();', 'MyClass = novo();', 'a', 1, 1, 9),
('Qual palavra-chave é usada para declarar uma variável constante em Java?', 'final', 'const', 'static', 'let', 'constant', 'a', 1, 1, 9),
('Qual é o operador usado para comparar dois valores em Java?', '==', '=', '<>', '!=', '><', 'a', 1, 1, 9),
('Qual é o nome do método usado para destruir objetos em Java?', 'finalize()', 'destroy()', 'delete()', 'clean()', 'dispose()', 'a', 1, 1, 9),
('Java é uma linguagem de programação orientada a objetos.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 9),
('Em Java, o operador \"+\" é usado para concatenação de strings.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 9),
('O método println() é usado para imprimir uma linha de texto em Java.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 9),
('Em Java, uma classe pode herdar atributos e métodos de outra classe usando a palavra-chave \"extends\".', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 9),
('Java é uma linguagem de programação compilada e interpretada.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 9),

('O que é um objeto em programação orientada a objetos?', 'Uma instância de uma classe', 'Uma variável global', 'Um método estático', 'Um operador de atribuição', 'Uma estrutura de controle', 'a', 1, 1, 10),
('Qual é o princípio da herança em programação orientada a objetos?', 'Permite que uma classe compartilhe características de outra classe', 'Restringe o acesso aos membros de uma classe', 'Torna todos os métodos de uma classe públicos', 'Permite que uma classe possua vários construtores', 'Fornece acesso direto aos métodos de uma classe', 'a', 1, 1, 10),
('O que é encapsulamento em programação orientada a objetos?', 'Ocultar os detalhes de implementação e expor apenas a interface', 'Permitir o acesso direto aos atributos de uma classe', 'Combinar várias classes em uma única classe', 'Definir múltiplas versões de um método na mesma classe', 'Permitir que uma classe seja instanciada várias vezes', 'a', 1, 1, 10),
('O que é polimorfismo em programação orientada a objetos?', 'Capacidade de um objeto ser tratado como outro tipo de objeto', 'Capacidade de uma classe herdar de várias classes', 'Capacidade de uma classe possuir múltiplas formas de um método', 'Capacidade de uma classe ser instanciada apenas uma vez', 'Capacidade de uma classe ser acessível de qualquer lugar do código', 'c', 1, 1, 10),
('O que é uma classe abstrata em programação orientada a objetos?', 'Uma classe que não pode ser instanciada diretamente', 'Uma classe que possui apenas métodos estáticos', 'Uma classe que herda de outra classe', 'Uma classe que não possui métodos ou atributos', 'Uma classe que não pode ser estendida por outras classes', 'a', 1, 1, 10),
('Em programação orientada a objetos, a herança permite que uma classe compartilhe características e comportamentos de outra classe.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 10),
('O encapsulamento em programação orientada a objetos consiste em ocultar os detalhes de implementação e expor apenas a interface de uma classe.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 10),
('Polimorfismo em programação orientada a objetos refere-se à capacidade de uma classe possuir múltiplas formas de um método.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 10),
('Uma classe abstrata em Java pode ser instanciada diretamente.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 10),
('Em Java, uma classe abstrata pode ter métodos concretos (com implementação) e métodos abstratos (sem implementação).', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 10),

('O que é uma exceção em Java?', 'Um evento que interrompe o fluxo normal de execução de um programa', 'Um método que trata erros de compilação', 'Um objeto que contém dados de depuração', 'Uma instrução que altera o fluxo de controle', 'Um tipo de variável que armazena valores de erro', 'a', 1, 1, 11),
('Qual é a classe base para todas as exceções em Java?', 'RuntimeException', 'Exception', 'Throwable', 'Error', 'IOException', 'c', 1, 1, 11),
('Qual é a palavra-chave usada para lançar uma exceção em Java?', 'catch', 'try', 'throw', 'finally', 'throws', 'c', 1, 1, 11),
('Qual é a função do bloco finally em um bloco try-catch-finally em Java?', 'Capturar e lidar com exceções lançadas pelo bloco try', 'Executar código independentemente de uma exceção ser lançada ou não', 'Lançar uma exceção caso ocorra um erro', 'Interromper o fluxo de execução do programa', 'Repetir a execução de um bloco de código', 'b', 1, 1, 11),
('O que é uma exceção verificada em Java?', 'Uma exceção que ocorre durante a execução do programa', 'Uma exceção que deve ser tratada ou declarada no código', 'Uma exceção que não pode ser prevista', 'Uma exceção que não pode ser tratada', 'Uma exceção que ocorre apenas em tempo de compilação', 'b', 1, 1, 11),
('Em Java, uma exceção RuntimeException é uma exceção verificada.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 11),
('A palavra-chave try é usada para definir um bloco de código no qual uma exceção pode ocorrer.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 11),
('Em Java, o bloco finally é opcional em um bloco try-catch.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 11),
('A palavra-chave throws é usada para lançar uma exceção em Java.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 11),
('Uma exceção não verificada em Java é uma exceção que deve ser tratada ou declarada no código.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 11),

('Qual é o objetivo do desenvolvimento de aplicações?', 'Criar programas de computador de alta complexidade', 'Automatizar tarefas repetitivas', 'Desenvolver software para uso comercial', 'Resolver problemas e atender necessidades específicas', 'Criar sistemas operacionais', 'd', 1, 1, 12),
('Qual é uma etapa comum no ciclo de vida do desenvolvimento de software?', 'Manutenção', 'Comunicação', 'Treinamento', 'Avaliação', 'Compartilhamento', 'a', 1, 1, 12),
('O que é um requisito de software?', 'Uma lista de tecnologias a serem utilizadas', 'Uma descrição detalhada do layout da interface de usuário', 'Uma declaração formal do que um sistema deve fazer', 'Um cronograma de desenvolvimento do projeto', 'Um registro de todas as alterações feitas no código-fonte', 'c', 1, 1, 12),
('Qual é a importância dos testes de software no desenvolvimento de aplicações?', 'Garantir que o código-fonte seja mantido em sigilo', 'Verificar se o software atende aos requisitos especificados', 'Acelerar o processo de desenvolvimento de software', 'Aumentar a complexidade do software', 'Simplificar o processo de depuração', 'b', 1, 1, 12),
('O que é uma arquitetura de software?', 'Um conjunto de instruções para o desenvolvimento de aplicativos', 'Uma técnica para ocultar detalhes de implementação', 'Uma estrutura organizada de componentes de software', 'Um padrão de codificação para garantir a compatibilidade', 'Um modelo de negócio para comercialização de software', 'c', 1, 1, 12),
('A manutenção é uma etapa opcional no ciclo de vida do desenvolvimento de software.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 12),
('Um requisito de software é uma declaração formal do que um sistema deve fazer.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 12),
('Os testes de software são importantes para garantir que o software atenda aos requisitos especificados.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 12),
('A arquitetura de software refere-se à estrutura organizada de componentes de software.', 'verdadeiro', 'falso', NULL, NULL, NULL, 'v', 1, 1, 12),
('Uma arquitetura de software define um conjunto de instruções para o desenvolvimento de aplicativos.', 'falso', 'verdadeiro', NULL, NULL, NULL, 'f', 1, 1, 12);



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
